<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="scriptImports" type="xstring" value="// Your custom imports:%%00010import javax.xml.parsers.*;%%00010import javax.xml.transform.*;%%00010import javax.xml.transform.dom.DOMSource;%%00010import javax.xml.transform.stream.StreamResult;%%00010import org.w3c.dom.Document;%%00010import org.xml.sax.*;%%00010%%00010import java.io.StringReader;%%00010import java.io.StringWriter;%%00010"/>
        <entry key="scriptFields" type="xstring" value="// Your custom variables:%%00010"/>
        <entry key="scriptBody" type="xstring" value="// Enter your code here:%%00010%%00010// Variáveis de saída%%00010%%00010boolean valido = false;%%00010String erro = &quot;&quot;;%%00010String status = &quot;OK&quot;; // estado geral%%00010%%00010try {%%00010    // --- Obter XML do fluxo KNIME ---%%00010    Document xmlDoc = c_XML;%%00010%%00010    // --- Converter Document para string XML ---%%00010    java.io.StringWriter writer = new java.io.StringWriter();%%00010    javax.xml.transform.TransformerFactory.newInstance()%%00010        .newTransformer()%%00010        .transform(%%00010            new javax.xml.transform.dom.DOMSource(xmlDoc),%%00010            new javax.xml.transform.stream.StreamResult(writer)%%00010        );%%00010    String xmlSemDTD = writer.toString();%%00010%%00010    // --- DTD embutido diretamente no código ---%%00010// --- DTD embutido diretamente no código ---%%00010String dtd =%%00010&quot;&lt;!DOCTYPE root [\n&quot; +%%00010&quot;    &lt;!ELEMENT root (item+)&gt;\n&quot; +%%00010&quot;    &lt;!ELEMENT item (DataHora, ResultadoInfo, EquipaCasa, EquipaFora, Jogo)&gt;\n&quot; +%%00010&quot;    &lt;!ELEMENT DataHora (#PCDATA)&gt;\n&quot; +%%00010&quot;    &lt;!ELEMENT ResultadoInfo (#PCDATA)&gt;\n&quot; +%%00010&quot;    &lt;!ELEMENT EquipaCasa (#PCDATA)&gt;\n&quot; +%%00010&quot;    &lt;!ELEMENT EquipaFora (#PCDATA)&gt;\n&quot; +%%00010&quot;    &lt;!ELEMENT Jogo (#PCDATA)&gt;\n&quot; +%%00010&quot;]&gt;\n&quot;;%%00010%%00010%%00010    // --- Injetar o DTD diretamente antes do &lt;root&gt; ---%%00010    String xmlComDTD = xmlSemDTD.replaceFirst(&quot;&lt;root&gt;&quot;, dtd + &quot;\n&lt;root&gt;&quot;);%%00010%%00010    // --- Criar InputSource com o XML modificado ---%%00010    InputSource source = new InputSource(new StringReader(xmlComDTD));%%00010%%00010    // --- Configurar parser com validação ---%%00010    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();%%00010    factory.setValidating(true);%%00010    factory.setNamespaceAware(false);%%00010    DocumentBuilder builder = factory.newDocumentBuilder();%%00010%%00010    // --- Handler de erros para a validação DTD ---%%00010    builder.setErrorHandler(new ErrorHandler() {%%00010        public void warning(SAXParseException e) throws SAXException { throw e; }%%00010        public void error(SAXParseException e) throws SAXException { throw e; }%%00010        public void fatalError(SAXParseException e) throws SAXException { throw e; }%%00010    });%%00010%%00010    // --- Executar validação ---%%00010    builder.parse(source);%%00010    valido = true;%%00010%%00010} catch (SAXException e) {%%00010    erro = &quot;Erro DTD: &quot; + e.getMessage();%%00010    status = &quot;ERRO_DTD&quot;;%%00010} catch (Exception e) {%%00010    erro = &quot;Erro geral: &quot; + e.getMessage();%%00010    status = &quot;ERRO_GERAL&quot;;%%00010}%%00010%%00010// --- Se houve erro, exportar XML para ficheiro automaticamente ---%%00010if (!valido) {%%00010    try {%%00010        String pastaErros = &quot;data/logs/&quot;; // caminho relativo%%00010        java.io.File dir = new java.io.File(pastaErros);%%00010        if (!dir.exists()) dir.mkdirs();%%00010%%00010        // Nome do ficheiro com timestamp%%00010        String nomeFicheiro = &quot;Erro_XML_&quot; +%%00010            new java.text.SimpleDateFormat(&quot;yyyyMMdd_HHmmss&quot;).format(new java.util.Date()) +%%00010            &quot;.xml&quot;;%%00010%%00010        java.io.File file = new java.io.File(dir, nomeFicheiro);%%00010%%00010        // Usa OutputStreamWriter com UTF-8%%00010        java.io.OutputStreamWriter fw =%%00010            new java.io.OutputStreamWriter(new java.io.FileOutputStream(file), &quot;UTF-8&quot;);%%00010%%00010        // Escreve comentário do erro%%00010        fw.write(&quot;&lt;!-- &quot; + erro + &quot; --&gt;\n&quot;);%%00010%%00010        // Criar Transformer com indentação e encoding%%00010        javax.xml.transform.Transformer transformer =%%00010            javax.xml.transform.TransformerFactory.newInstance().newTransformer();%%00010        transformer.setOutputProperty(javax.xml.transform.OutputKeys.INDENT, &quot;yes&quot;);%%00010        transformer.setOutputProperty(&quot;{http://xml.apache.org/xslt}indent-amount&quot;, &quot;4&quot;);%%00010        transformer.setOutputProperty(javax.xml.transform.OutputKeys.ENCODING, &quot;UTF-8&quot;);%%00010        transformer.setOutputProperty(javax.xml.transform.OutputKeys.OMIT_XML_DECLARATION, &quot;no&quot;);%%00010%%00010        // Converter o Document em XML formatado%%00010        transformer.transform(%%00010            new javax.xml.transform.dom.DOMSource(c_XML),%%00010            new javax.xml.transform.stream.StreamResult(fw)%%00010        );%%00010%%00010        fw.close();%%00010%%00010    } catch (Exception ex) {%%00010        erro += &quot; | Falha ao exportar ficheiro de erro: &quot; + ex.getMessage();%%00010    }%%00010}%%00010%%00010// Saídas do snippet%%00010out_Valido = valido;%%00010out_Erro = erro;%%00010out_Status = status;%%00010%%00010"/>
        <config key="jarFiles">
            <entry key="array-size" type="xint" value="0"/>
        </config>
        <config key="outCols">
            <entry key="array-size" type="xint" value="3"/>
            <config key="0">
                <entry key="Name" type="xstring" value="Valido"/>
                <entry key="JavaName" type="xstring" value="out_Valido"/>
                <entry key="JavaType" type="xstring" value="java.lang.Boolean"/>
                <config key="Type">
                    <entry key="cell_class" type="xstring" value="org.knime.core.data.def.BooleanCell"/>
                    <entry key="is_null" type="xboolean" value="false"/>
                </config>
                <entry key="ConverterFactory" type="xstring" value="org.knime.core.data.def.BooleanCell$BooleanCellFactory.create(class java.lang.Boolean)"/>
                <entry key="replaceExisting" type="xboolean" value="false"/>
            </config>
            <config key="1">
                <entry key="Name" type="xstring" value="Erro"/>
                <entry key="JavaName" type="xstring" value="out_Erro"/>
                <entry key="JavaType" type="xstring" value="java.lang.String"/>
                <config key="Type">
                    <entry key="cell_class" type="xstring" value="org.knime.core.data.def.StringCell"/>
                    <entry key="is_null" type="xboolean" value="false"/>
                </config>
                <entry key="ConverterFactory" type="xstring" value="org.knime.core.data.def.StringCell$StringCellFactory.createCell(class java.lang.String)"/>
                <entry key="replaceExisting" type="xboolean" value="false"/>
            </config>
            <config key="2">
                <entry key="Name" type="xstring" value="Status_Log"/>
                <entry key="JavaName" type="xstring" value="out_Status"/>
                <entry key="JavaType" type="xstring" value="java.lang.String"/>
                <config key="Type">
                    <entry key="cell_class" type="xstring" value="org.knime.core.data.def.StringCell"/>
                    <entry key="is_null" type="xboolean" value="false"/>
                </config>
                <entry key="ConverterFactory" type="xstring" value="org.knime.core.data.def.StringCell$StringCellFactory.createCell(class java.lang.String)"/>
                <entry key="replaceExisting" type="xboolean" value="false"/>
            </config>
        </config>
        <config key="outVars">
            <entry key="array-size" type="xint" value="0"/>
        </config>
        <config key="inCols">
            <entry key="array-size" type="xint" value="1"/>
            <config key="0">
                <entry key="Name" type="xstring" value="XML"/>
                <entry key="JavaName" type="xstring" value="c_XML"/>
                <entry key="JavaType" type="xstring" value="org.w3c.dom.Document"/>
                <config key="Type">
                    <entry key="cell_class" type="xstring" value="org.knime.core.data.xml.XMLCell"/>
                    <entry key="is_null" type="xboolean" value="false"/>
                </config>
                <entry key="ConverterFactory" type="xstring" value="org.knime.core.data.convert.java.SimpleDataCellToJavaConverterFactory(XMLValue,interface org.w3c.dom.Document,Document (XML))"/>
            </config>
        </config>
        <config key="inVars">
            <entry key="array-size" type="xint" value="0"/>
        </config>
        <entry key="version" type="xstring" value="version 1.x"/>
        <entry key="templateUUID" type="xstring" isnull="true" value=""/>
        <entry key="runOnExecute" type="xboolean" value="false"/>
        <config key="bundles">
            <entry key="array-size" type="xint" value="0"/>
        </config>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value="Validar DTD"/>
        <entry key="contentType" type="xstring" value="text/plain"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="0"/>
        <entry key="y-coordinate" type="xint" value="0"/>
        <entry key="width" type="xint" value="0"/>
        <entry key="height" type="xint" value="0"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="0"/>
        <entry key="defFontSize" type="xint" value="-1"/>
        <entry key="annotation-version" type="xint" value="20230412"/>
        <config key="styles"/>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="EXECUTED"/>
    <entry key="factory" type="xstring" value="org.knime.base.node.jsnippet.JavaSnippetNodeFactory"/>
    <entry key="node-name" type="xstring" value="Java Snippet"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME Java Snippet Nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.jsnippets"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="5.7.0.v202508211821"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Javasnippet"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.javasnippet.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="5.7.0.v202508211821"/>
    <config key="factory_settings"/>
    <entry key="name" type="xstring" value="Java Snippet"/>
    <entry key="hasContent" type="xboolean" value="true"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_spec_class" type="xstring" value="org.knime.core.data.DataTableSpec"/>
            <entry key="port_object_class" type="xstring" value="org.knime.core.node.BufferedDataTable"/>
            <entry key="port_object_summary" type="xstring" value="Rows: 1, Cols: 7"/>
            <entry key="port_dir_location" type="xstring" value="port_1"/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" value="493c8c40-ac5b-46ef-960a-9c4dabafd6be"/>
    </config>
</config>
